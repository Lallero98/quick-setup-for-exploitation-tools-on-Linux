---

# Ansible playbook by Enrico Castelli - https://github.com/Lallero98
# Average installation time 30 minutes

- name: All you need (is love)
  hosts: localhost
  connection: local
  tasks:
      
    - name: Update apt cache
      become: yes
      apt:
        update_cache: yes

    - name: Install all apt package
      become: yes
      apt:
        name:  "{{ packages }}"
        state: present
        update_cache:  yes
      vars:
        packages:
        - ipython3
        - git
        - python3-virtualenv
        - python3-dev 
        - bvi 
        - vbindiff 
        - build-essential 
        - exuberant-ctags 
        - cmake 
        - valgrind 
        - nasm 
        - ant 
        - flex 
        - bison 
        - python3-pip 
        - qemu 
        - qemu-user 
        - qemu-system 
        - cscope 
        - ht 
        - reptyr 
        - silversearcher-ag 
        - libseccomp-dev 
        - libsdl-mixer1.2 
        - python3-venv 
        - wget 
        - libc6-dbg 
        - binwalk 
        - libdwarf-dev 
        - dwarfdump 
        - libcapstone-dev 
        - libgmp-dev
        - curl
        - texinfo
        - python-is-python3

    # purge gdb and gdbserver
    - name: Remove gdb and gdbserver 9 (Bugged with 64-bit executables)
      become: yes
      apt:
        name: "{{ packages }}"
        state: absent
        update_cache:  yes
      vars:
        packages:
        - gdb
        - gdbserver

    - name: Enable i386 architecture
      become: yes
      command: dpkg --add-architecture i386

    - name: Install lib for 32bit
      become: yes
      apt:
        name: libc6-dbg:i386
        state: present
        update_cache: yes

    - name: Package for cross-compile to ARM32 and ARM64
      become: yes
      apt:
        name: "{{ packages }}"
        state: present
        update_cache:  yes
      vars:
        packages:
        - gcc-arm-linux-gnueabi
        - binutils-arm-linux-gnueabi
        - gcc-aarch64-linux-gnu
        - binutils-aarch64-linux-gnu

    - name: Install python package
      pip:
        name: 
          - r2pipe
          - ropper
          - ipython
          - z3_solver 
          - frida-tools
          - pwntools 
          - keystone-engine
          - unicorn 
          - capstone
        extra_args: --user

    - name: Clone a github repository
      git:
        repo: https://github.com/bminor/binutils-gdb.git
        dest: "{{ ansible_env.HOME }}/gdb-dir/"
        clone: yes
        update: yes

    - name: Configure and make gdb and gdbserver (require time, be patient!)
      shell: |
        cd "{{ ansible_env.HOME }}/gdb-dir/"
        ./configure --with-python
        make

    - name: Make install gdb and gdbserver
      become: yes
      shell: |
        cd "{{ ansible_env.HOME }}/gdb-dir/"
        make install

    - name: Installing GEF
      shell: |
        cd "{{ ansible_env.HOME }}/"
        bash -c "$(curl -fsSL http://gef.blah.cat/sh)"
    
    - name: For use libc symbols
      lineinfile:
        path: "{{ ansible_env.HOME }}/.gdbinit"
        insertafter: EOF
        line: 'set debug-file-directory /usr/lib/debug'
    
    - name: Install a jdk package for Ghidra
      become: yes
      apt:
        deb: https://corretto.aws/downloads/latest/amazon-corretto-11-x64-linux-jdk.deb

    - name: Download Ghidra
      shell: |
        cd "{{ ansible_env.HOME }}/"
        wget https://github.com/NationalSecurityAgency/ghidra/releases/download/Ghidra_10.1.2_build/ghidra_10.1.2_PUBLIC_20220125.zip

    - name: Extract ghidra_zip
      ansible.builtin.unarchive:
        src: "{{ ansible_env.HOME }}/ghidra_10.1.2_PUBLIC_20220125.zip"
        dest: "{{ ansible_env.HOME }}/."
      
    - name: Update $PATH enviroment variable
      lineinfile:
        path: "{{ ansible_env.HOME }}/.bashrc"
        insertafter: EOF
        line: export PATH=$PATH:~/.local/bin:~/bin:~/gdb-dir/gdb:~/gdb-dir/gdbserver:~/ghidra_10.1.2_PUBLIC/ghidraRun
